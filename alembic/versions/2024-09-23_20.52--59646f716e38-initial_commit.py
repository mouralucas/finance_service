"""initial commit

Revision ID: 59646f716e38
Revises: 
Create Date: 2024-09-23 20:52:42.065159

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '59646f716e38'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account_balance',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account_type',
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bank',
    sa.Column('name', sa.String(length=250), nullable=False),
    sa.Column('code', sa.SmallInteger(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('category',
    sa.Column('name', sa.String(length=250), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('comment', sa.String(length=500), nullable=True),
    sa.Column('parent_id', sa.Uuid(), nullable=True),
    sa.Column('order', sa.SmallInteger(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('country',
    sa.Column('id', sa.String(length=5), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=False),
    sa.Column('continent', sa.String(length=5), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('currency',
    sa.Column('id', sa.String(length=3), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('indexer',
    sa.Column('name', sa.String(length=250), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('indexer_type',
    sa.Column('name', sa.String(length=250), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('investment_category',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=250), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('investment_objective',
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('estimated_deadline', sa.Date(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('liquidity',
    sa.Column('name', sa.String(length=250), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account',
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('bank_id', sa.Uuid(), nullable=False),
    sa.Column('nickname', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('branch', sa.String(length=30), nullable=True),
    sa.Column('number', sa.String(length=50), nullable=True),
    sa.Column('open_date', sa.Date(), nullable=False),
    sa.Column('close_date', sa.Date(), nullable=True),
    sa.Column('type_id', sa.Uuid(), nullable=False),
    sa.Column('currency_id', sa.String(length=3), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['bank_id'], ['bank.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['account_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('investment_type',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('parent_id', sa.Uuid(), nullable=True),
    sa.Column('investment_category_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['investment_category_id'], ['investment_category.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['investment_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tax',
    sa.Column('name', sa.String(length=250), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('acronyms', sa.String(length=30), nullable=False),
    sa.Column('country_id', sa.String(length=5), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account_statement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('account_id', sa.Uuid(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('currency_id', sa.String(length=3), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('category_id', sa.Uuid(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('operation_type', sa.String(length=15), nullable=False),
    sa.Column('transaction_currency_id', sa.String(length=3), nullable=False),
    sa.Column('transaction_amount', sa.Float(), nullable=False),
    sa.Column('exchange_rate', sa.Float(), nullable=True),
    sa.Column('perc_tax', sa.Float(), nullable=True),
    sa.Column('tax', sa.Float(), nullable=True),
    sa.Column('spread_perc', sa.Float(), nullable=True),
    sa.Column('spread', sa.Float(), nullable=True),
    sa.Column('effective_rate', sa.Float(), nullable=True),
    sa.Column('origin', sa.String(length=10), nullable=False),
    sa.Column('is_validated', sa.Boolean(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['transaction_currency_id'], ['currency.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('credit_card',
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('nickname', sa.String(length=50), nullable=False),
    sa.Column('account_id', sa.Uuid(), nullable=True),
    sa.Column('issue_date', sa.Date(), nullable=True),
    sa.Column('cancellation_date', sa.Date(), nullable=True),
    sa.Column('due_day', sa.SmallInteger(), nullable=True),
    sa.Column('close_day', sa.SmallInteger(), nullable=True),
    sa.Column('currency_id', sa.String(length=3), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('investment',
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('custodian_id', sa.Uuid(), nullable=False),
    sa.Column('account_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('type_id', sa.Uuid(), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('maturity_date', sa.Date(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency_id', sa.String(length=3), nullable=False),
    sa.Column('indexer_type_id', sa.Uuid(), nullable=False),
    sa.Column('indexer_id', sa.Uuid(), nullable=False),
    sa.Column('liquidity_id', sa.Uuid(), nullable=False),
    sa.Column('is_liquidated', sa.Boolean(), nullable=False),
    sa.Column('liquidation_date', sa.Date(), nullable=True),
    sa.Column('liquidation_amount', sa.Float(), nullable=False),
    sa.Column('country_id', sa.String(), nullable=False),
    sa.Column('objective_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['custodian_id'], ['bank.id'], ),
    sa.ForeignKeyConstraint(['indexer_id'], ['indexer.id'], ),
    sa.ForeignKeyConstraint(['indexer_type_id'], ['indexer_type.id'], ),
    sa.ForeignKeyConstraint(['liquidity_id'], ['liquidity.id'], ),
    sa.ForeignKeyConstraint(['objective_id'], ['investment_objective.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['investment_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('credit_card_bill',
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('credit_card_id', sa.Uuid(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('category_id', sa.Uuid(), nullable=True),
    sa.Column('currency_id', sa.String(length=3), nullable=False),
    sa.Column('operation_type', sa.String(length=15), nullable=False),
    sa.Column('transaction_currency_id', sa.String(length=3), nullable=False),
    sa.Column('transaction_amount', sa.Float(), nullable=False),
    sa.Column('dollar_exchange_rate', sa.Float(), nullable=True),
    sa.Column('currency_dollar_ex_rate', sa.Float(), nullable=True),
    sa.Column('total_tax', sa.Float(), nullable=True),
    sa.Column('tax_details', sa.JSON(), nullable=True),
    sa.Column('is_installment', sa.Boolean(), nullable=False),
    sa.Column('current_installment', sa.SmallInteger(), nullable=False),
    sa.Column('installments', sa.SmallInteger(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('parent_id', sa.Uuid(), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('origin', sa.String(length=10), nullable=False),
    sa.Column('is_validated', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['credit_card_id'], ['credit_card.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['credit_card_bill.id'], ),
    sa.ForeignKeyConstraint(['transaction_currency_id'], ['currency.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('investment_statement',
    sa.Column('investment_id', sa.Uuid(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('start_amount', sa.Float(), nullable=False),
    sa.Column('gross_amount', sa.Float(), nullable=False),
    sa.Column('total_tax', sa.Float(), nullable=False),
    sa.Column('total_fee', sa.Float(), nullable=False),
    sa.Column('net_amount', sa.Float(), nullable=False),
    sa.Column('tax_detail', sa.JSON(), nullable=True),
    sa.Column('fee_detail', sa.JSON(), nullable=True),
    sa.Column('value_change', sa.Float(), nullable=False),
    sa.Column('percentage_change', sa.Float(), nullable=False),
    sa.Column('index_change', sa.Float(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=True),
    sa.Column('edited_by', sa.Uuid(), nullable=True),
    sa.Column('deleted_by', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['investment_id'], ['investment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('investment_statement')
    op.drop_table('credit_card_bill')
    op.drop_table('investment')
    op.drop_table('credit_card')
    op.drop_table('account_statement')
    op.drop_table('tax')
    op.drop_table('investment_type')
    op.drop_table('account')
    op.drop_table('liquidity')
    op.drop_table('investment_objective')
    op.drop_table('investment_category')
    op.drop_table('indexer_type')
    op.drop_table('indexer')
    op.drop_table('currency')
    op.drop_table('country')
    op.drop_table('category')
    op.drop_table('bank')
    op.drop_table('account_type')
    op.drop_table('account_balance')
    # ### end Alembic commands ###
